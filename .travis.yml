sudo: required
dist: xenial
env:
  global:
    - CHANGE_MINIKUBE_NONE_USER=true
    - MINIKUBE_WANTUPDATENOTIFICATION=false
    - MINIKUBE_WANTREPORTERRORPROMPT=false
    - MINIKUBE_HOME=$HOME
    - CHANGE_MINIKUBE_NONE_USER=true
    - KUBECONFIG=$HOME/.kube/config
    - CHAOSENGINE=engine-nginx
    - APP_UUID=1234
    - APP_NAMESPACE=litmus
    - TRIVYARCH="64bit"

services:
  - docker
language: go
go:
  - 1.14.2

addons:
  apt:
    update: true

before_script:

  - set -e
  # Configure environment so changes are picked up when the Docker daemon is restarted after upgrading
  - echo '{"experimental":true}' | sudo tee /etc/docker/daemon.json
  - export DOCKER_CLI_EXPERIMENTAL=enabled
  - docker run --rm --privileged docker/binfmt:a7996909642ee92942dcd6cff44b9b95f08dad64
  # Upgrade to Docker CE 19.03 for BuildKit support
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
  - sudo apt-get update
  - sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce=5:19.03.8~3-0~ubuntu-xenial # pin version for reproducibility
  # Show info to simplify debugging and create a builder
  - docker info
  - docker buildx create --name builder --use
  - docker buildx ls
  - sudo docker version
  # Download kubectl, which is a requirement for using minikube.
  - curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.13.0/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
  # Download minikube.
  - curl -LO https://storage.googleapis.com/minikube/releases/v1.4.0/minikube-linux-amd64 && sudo install minikube-linux-amd64 /usr/local/bin/minikube
  - mkdir -p $HOME/.kube $HOME/.minikube
  - touch $KUBECONFIG
  - sudo minikube start --vm-driver=none --kubernetes-version=v1.13.0
  - "sudo chown -R travis: /home/travis/.minikube/"
  # Wait for Kubernetes to be up and ready.
  - JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1; done
  # Installing Trivy Deps
  - sudo apt-get install curl
  - export VERSION=$(curl --silent "https://api.github.com/repos/aquasecurity/trivy/releases/latest" | grep '"tag_name":' | sed -E 's/.*"v([^"]+)".*/\1/')
  - echo ${VERSION} 
  - wget https://github.com/aquasecurity/trivy/releases/download/v${VERSION}/trivy_${VERSION}_Linux-${TRIVYARCH}.tar.gz
  - tar zxvf trivy_${VERSION}_Linux-${TRIVYARCH}.tar.gz

script:
  # Installing and configuring dependencies
  - make deps
  # Test
  - make test
  # Build
  - make build
  # Running Security check
  - make security-checks


after_success:
  - sudo minikube delete
  - make push
